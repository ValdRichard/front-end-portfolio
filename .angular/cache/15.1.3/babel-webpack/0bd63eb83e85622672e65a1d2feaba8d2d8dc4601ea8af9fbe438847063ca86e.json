{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../servicios/api.service\";\nimport * as i3 from \"@angular/router\";\nexport class FirstPartCreateComponent {\n  constructor(formBuilder, apiService, router, route) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.route = route;\n    this.id = '';\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreYApellido: ['', [Validators.required, Validators.minLength(5)]],\n      mail: ['', [Validators.required, Validators.minLength(5)]],\n      descripcion: ['', [Validators.required, Validators.minLength(5)]],\n      urlGithub: ['', [Validators.required, Validators.minLength(5)]],\n      urlLinkedin: ['', [Validators.required, Validators.minLength(5)]],\n      imageLinkedin: ['', [Validators.required, Validators.minLength(5)]],\n      imageGithub: ['', [Validators.required, Validators.minLength(5)]],\n      imageFotoPerfil: ['', [Validators.required, Validators.minLength(5)]],\n      imageBanner: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  ngOnInit() {}\n  get NombreYApellido() {\n    return this.form.get('nombreYApellido');\n  }\n  get Mail() {\n    return this.form.get('mail');\n  }\n  get UrlGithub() {\n    return this.form.get('urlGithub');\n  }\n  get UrlLinkedin() {\n    return this.form.get('urlLinkedin');\n  }\n  get ImageLinkedin() {\n    return this.form.get('imageLinkedin');\n  }\n  get ImageGithub() {\n    return this.form.get('imageGithub');\n  }\n  get ImageFotoPerfil() {\n    return this.form.get('imageFotoPerfil');\n  }\n  get ImageBanner() {\n    return this.form.get('imageBanner');\n  }\n  get Descripcion() {\n    return this.form.get('descripcion');\n  }\n  onEnviar(event) {\n    event.preventDefault();\n    this.apiService.updatePersona(this.form.value).subscribe(data => {\n      this.router.navigate(['portfolio']);\n    });\n  }\n}\nFirstPartCreateComponent.ɵfac = function FirstPartCreateComponent_Factory(t) {\n  return new (t || FirstPartCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nFirstPartCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FirstPartCreateComponent,\n  selectors: [[\"app-first-part-create\"]],\n  decls: 2,\n  vars: 0,\n  template: function FirstPartCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"first-part-create works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","FirstPartCreateComponent","constructor","formBuilder","apiService","router","route","form","group","nombreYApellido","required","minLength","mail","descripcion","urlGithub","urlLinkedin","imageLinkedin","imageGithub","imageFotoPerfil","imageBanner","ngOnInit","NombreYApellido","get","Mail","UrlGithub","UrlLinkedin","ImageLinkedin","ImageGithub","ImageFotoPerfil","ImageBanner","Descripcion","onEnviar","event","preventDefault","updatePersona","value","subscribe","data","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/first-part/first-part-create/first-part-create.component.ts","/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/first-part/first-part-create/first-part-create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../../servicios/api.service';\n\n@Component({\n  selector: 'app-first-part-create',\n  templateUrl: './first-part-create.component.html',\n  styleUrls: ['./first-part-create.component.css']\n})\nexport class FirstPartCreateComponent implements OnInit {\n\n  form:FormGroup;\n  id: string = '';\n  persona: any;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ){\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreYApellido:['', [Validators.required, Validators.minLength(5)]],\n      mail:['', [Validators.required, Validators.minLength(5)]],\n      descripcion:['', [Validators.required, Validators.minLength(5)]],\n      urlGithub:['', [Validators.required, Validators.minLength(5)]],\n      urlLinkedin:['', [Validators.required, Validators.minLength(5)]],\n      imageLinkedin:['', [Validators.required, Validators.minLength(5)]],\n      imageGithub:['', [Validators.required, Validators.minLength(5)]],\n      imageFotoPerfil:['', [Validators.required, Validators.minLength(5)]],\n      imageBanner:['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  \n  get NombreYApellido(){\n    return this.form.get('nombreYApellido');\n  }\n  get Mail(){\n    return this.form.get('mail');\n  }\n  get UrlGithub(){\n    return this.form.get('urlGithub');\n  }\n\n  get UrlLinkedin(){\n    return this.form.get('urlLinkedin');\n  }\n\n  get ImageLinkedin(){\n    return this.form.get('imageLinkedin');\n  }\n  \n  get ImageGithub(){\n    return this.form.get('imageGithub');\n  }\n\n  get ImageFotoPerfil(){\n    return this.form.get('imageFotoPerfil');\n  }\n\n  get ImageBanner(){\n    return this.form.get('imageBanner');\n  }\n\n  get Descripcion(){\n    return this.form.get('descripcion');\n  }\n\n  onEnviar(event:Event){\n    event.preventDefault();\n    this.apiService.updatePersona(this.form.value)\n      .subscribe(data=>{\n        this.router.navigate(['portfolio'])\n      })\n  }\n}\n","<p>first-part-create works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}