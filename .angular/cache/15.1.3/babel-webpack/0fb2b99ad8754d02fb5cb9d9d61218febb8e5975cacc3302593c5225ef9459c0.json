{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Metodos de Persona\n  getPersona() {\n    return this.http.get('http://localhost:8080/api/persona/get');\n  }\n  updatePersona(formData) {\n    return this.http.post('http://localhost:8080/api/persona/update', formData);\n  }\n  //Metodos de Educacion\n  getEducaciones() {\n    return this.http.get('http://localhost:8080/api/educaciones/getAll');\n  }\n  getEducacion(id) {\n    return this.http.get(`http://localhost:8080/api/educaciones/${id}`);\n  }\n  createEducacion(formData) {\n    return this.http.post('http://localhost:8080/api/educaciones/create', formData);\n  }\n  updateEducacion(formData, id) {\n    return this.http.put(`http://localhost:8080/api/educaciones/${id}`, formData);\n  }\n  deleteEducacion(id) {\n    return this.http.delete(`http://localhost:8080/api/educaciones/${id}`);\n  }\n  //Metodos de Experiencia\n  getExperiencias() {\n    return this.http.get('http://localhost:8080/api/experiencias/getAll');\n  }\n  getExperiencia(id) {\n    return this.http.get(`http://localhost:8080/api/experiencias/${id}`);\n  }\n  createExperiencia(formData) {\n    return this.http.post('http://localhost:8080/api/experiencias/create', formData);\n  }\n  updateExperiencia(formData, id) {\n    return this.http.put(`http://localhost:8080/api/experiencias/${id}`, formData);\n  }\n  deleteExperiencia(id) {\n    return this.http.delete(`http://localhost:8080/api/experiencias/${id}`);\n  }\n  //Metodos de Skill\n  getSkills() {\n    return this.http.get('http://localhost:8080/api/skills/getAll');\n  }\n  getSkill(id) {\n    return this.http.get(`http://localhost:8080/api/skills/${id}`);\n  }\n  createSkill(formData) {\n    return this.http.post('http://localhost:8080/api/skills/create', formData);\n  }\n  updateSkill(formData, id) {\n    return this.http.put(`http://localhost:8080/api/skills/${id}`, formData);\n  }\n  deleteSkill(id) {\n    return this.http.delete(`http://localhost:8080/api/skills/${id}`);\n  }\n  //Metodos de Proyecto\n  getProyectos() {\n    return this.http.get('http://localhost:8080/api/proyectos/getAll');\n  }\n  getProyecto(id) {\n    return this.http.get(`http://localhost:8080/api/proyectos/${id}`);\n  }\n  createProyecto(formData) {\n    return this.http.post('http://localhost:8080/api/proyectos/create', formData);\n  }\n  updateProyecto(formData, id) {\n    return this.http.put(`http://localhost:8080/api/proyectos/${id}`, formData);\n  }\n  deleteProyecto(id) {\n    return this.http.delete(`http://localhost:8080/api/proyectos/${id}`);\n  }\n  login(creds) {\n    return this.http.post('http://localhost:8080/login', creds, {\n      observe: 'response'\n    }).pipe(map(response => {\n      const body = response.body;\n      const headers = response.headers;\n      const bearerToken = headers.get('Authorization');\n      const token = bearerToken.replace('Bearer ', '');\n      localStorage.setItem('token', token);\n      return body;\n    }));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["map","ApiService","constructor","http","getPersona","get","updatePersona","formData","post","getEducaciones","getEducacion","id","createEducacion","updateEducacion","put","deleteEducacion","delete","getExperiencias","getExperiencia","createExperiencia","updateExperiencia","deleteExperiencia","getSkills","getSkill","createSkill","updateSkill","deleteSkill","getProyectos","getProyecto","createProyecto","updateProyecto","deleteProyecto","login","creds","observe","pipe","response","body","headers","bearerToken","token","replace","localStorage","setItem","getToken","getItem","factory","providedIn"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/servicios/api.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { Persona, Educacion, Experiencia, Proyecto, Skill, Credentials} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http:HttpClient) { }\n\n  //Metodos de Persona\n\n  getPersona(): Observable<Persona>{\n    return this.http.get<Persona>('http://localhost:8080/api/persona/get')\n  }\n\n  updatePersona(formData:any) : Observable<any>{\n    return this.http.post('http://localhost:8080/api/persona/update', formData);\n  }\n\n  //Metodos de Educacion\n\n  getEducaciones(): Observable<Educacion[]>{\n    return this.http.get<Educacion[]>('http://localhost:8080/api/educaciones/getAll')\n  }\n\n  getEducacion(id: any): Observable<Educacion>{\n    return this.http.get<Educacion>(`http://localhost:8080/api/educaciones/${id}`)\n  }\n\n  createEducacion(formData:any): Observable<any>{\n    return this.http.post('http://localhost:8080/api/educaciones/create', formData);\n  }\n\n  updateEducacion(formData:any, id:any): Observable<any>{\n    return this.http.put(`http://localhost:8080/api/educaciones/${id}`, formData);\n  }\n\n  deleteEducacion(id:any): Observable<any>{\n    return this.http.delete(`http://localhost:8080/api/educaciones/${id}`);\n  }\n\n  //Metodos de Experiencia\n\n  getExperiencias(): Observable<Experiencia[]>{\n    return this.http.get<Experiencia[]>('http://localhost:8080/api/experiencias/getAll')\n  }\n\n  getExperiencia(id: any): Observable<Experiencia>{\n    return this.http.get<Experiencia>(`http://localhost:8080/api/experiencias/${id}`)\n  }\n\n  createExperiencia(formData:any): Observable<any>{\n    return this.http.post('http://localhost:8080/api/experiencias/create', formData);\n  }\n\n  updateExperiencia(formData:any, id:any): Observable<any>{\n    return this.http.put(`http://localhost:8080/api/experiencias/${id}`, formData);\n  }\n\n  deleteExperiencia(id:any): Observable<any>{\n    return this.http.delete(`http://localhost:8080/api/experiencias/${id}`);\n  }\n\n  //Metodos de Skill\n\n  getSkills(): Observable<Skill[]>{\n    return this.http.get<Skill[]>('http://localhost:8080/api/skills/getAll')\n  }\n\n  getSkill(id: any): Observable<Skill>{\n    return this.http.get<Skill>(`http://localhost:8080/api/skills/${id}`)\n  }\n\n  createSkill(formData:any): Observable<any>{\n    return this.http.post('http://localhost:8080/api/skills/create', formData);\n  }\n\n  updateSkill(formData:any, id:any): Observable<any>{\n    return this.http.put(`http://localhost:8080/api/skills/${id}`, formData);\n  }\n\n  deleteSkill(id:any): Observable<any>{\n    return this.http.delete(`http://localhost:8080/api/skills/${id}`);\n  }\n\n  //Metodos de Proyecto\n\n  getProyectos(): Observable<Proyecto[]>{\n    return this.http.get<Proyecto[]>('http://localhost:8080/api/proyectos/getAll')\n  }\n\n  getProyecto(id: any): Observable<Proyecto>{\n    return this.http.get<Proyecto>(`http://localhost:8080/api/proyectos/${id}`)\n  }\n\n  createProyecto(formData:any): Observable<any>{\n    return this.http.post('http://localhost:8080/api/proyectos/create', formData);\n  }\n\n  updateProyecto(formData:any, id:any): Observable<any>{\n    return this.http.put(`http://localhost:8080/api/proyectos/${id}`, formData);\n  }\n\n  deleteProyecto(id:any): Observable<any>{\n    return this.http.delete(`http://localhost:8080/api/proyectos/${id}`);\n  }\n\n  login(creds: Credentials){\n    return this.http.post('http://localhost:8080/login', creds, {\n      observe: 'response'\n    }).pipe(map((response: HttpResponse<any>) =>{\n      const body = response.body;\n      const headers = response.headers;\n\n      const bearerToken = headers.get('Authorization')!;\n      const token = bearerToken.replace('Bearer ', '');\n\n      localStorage.setItem('token', token);\n\n      return body;\n    }))\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}