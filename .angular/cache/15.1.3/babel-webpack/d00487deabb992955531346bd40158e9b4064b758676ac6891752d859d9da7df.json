{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../servicios/api.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction SkillsCreateComponent_div_10_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" El campo es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SkillsCreateComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SkillsCreateComponent_div_10_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.NombreHabilidad == null ? null : ctx_r0.NombreHabilidad.hasError(\"required\"));\n  }\n}\nfunction SkillsCreateComponent_div_15_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 13);\n    i0.ɵɵtext(1, \" El campo es requerido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SkillsCreateComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, SkillsCreateComponent_div_15_p_1_Template, 2, 0, \"p\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.Porcentaje == null ? null : ctx_r1.Porcentaje.hasError(\"required\"));\n  }\n}\nconst _c0 = function () {\n  return [\"/portfolio\"];\n};\nconst _c1 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\nexport class SkillsCreateComponent {\n  constructor(formBuilder, apiService, router, route) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.route = route;\n    this.id = '';\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreHabilidad: ['', [Validators.required, Validators.minLength(5)]],\n      porcentaje: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  ngOnInit() {}\n  get NombreHabilidad() {\n    return this.form.get('nombreHabilidad');\n  }\n  get Porcentaje() {\n    return this.form.get('porcentaje');\n  }\n  onEnviar(event) {\n    event.preventDefault();\n    this.apiService.createSkill(this.form.value).subscribe(data => {\n      this.router.navigate(['portfolio']);\n    });\n  }\n}\nSkillsCreateComponent.ɵfac = function SkillsCreateComponent_Factory(t) {\n  return new (t || SkillsCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nSkillsCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SkillsCreateComponent,\n  selectors: [[\"app-skills-create\"]],\n  decls: 19,\n  vars: 13,\n  consts: [[1, \"container\", \"bg-medium-dark-blue\", \"p-3\", \"text-light\"], [1, \"m-4\"], [1, \"mx-auto\", \"btn\", \"btn-success\", 3, \"routerLink\"], [1, \"m-4\", 3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"nombreHabilidad\", 1, \"form-label\"], [\"formControlName\", \"nombreHabilidad\", \"name\", \"nombreHabilidad\", \"type\", \"text\", \"id\", \"nombreHabilidad\", \"aria-describedby\", \"nombreHabilidad\", 1, \"form-control\", 3, \"ngClass\"], [4, \"ngIf\"], [\"for\", \"porcentaje\", 1, \"form-label\"], [\"formControlName\", \"porcentaje\", \"name\", \"porcentaje\", \"type\", \"text\", \"id\", \"porcentaje\", \"aria-describedby\", \"porcentaje\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\"], [1, \"btn\", \"btn-primary\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function SkillsCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n      i0.ɵɵtext(2, \"Crear Skill\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵtext(4, \"Volver\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function SkillsCreateComponent_Template_form_ngSubmit_5_listener($event) {\n        return ctx.onEnviar($event);\n      });\n      i0.ɵɵelementStart(6, \"div\", 4)(7, \"label\", 5);\n      i0.ɵɵtext(8, \"Nombre de la Skill\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵtemplate(10, SkillsCreateComponent_div_10_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 4)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Porcentaje\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(14, \"input\", 9);\n      i0.ɵɵtemplate(15, SkillsCreateComponent_div_15_Template, 2, 1, \"div\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"button\", 11);\n      i0.ɵɵtext(18, \"Ingresar\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(6, _c0));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.form);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c1, (ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.errors) && (ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.touched), !(ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.errors) && (ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.touched)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.errors) && (ctx.NombreHabilidad == null ? null : ctx.NombreHabilidad.touched));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(10, _c1, (ctx.Porcentaje == null ? null : ctx.Porcentaje.errors) && (ctx.Porcentaje == null ? null : ctx.Porcentaje.touched), !(ctx.Porcentaje == null ? null : ctx.Porcentaje.errors) && (ctx.Porcentaje == null ? null : ctx.Porcentaje.touched)));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (ctx.Porcentaje == null ? null : ctx.Porcentaje.errors) && (ctx.Porcentaje == null ? null : ctx.Porcentaje.touched));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}