{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../servicios/api.service\";\nimport * as i3 from \"@angular/router\";\nexport class SoftSkillsUpdateComponent {\n  constructor(formBuilder, apiService, router, route) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.route = route;\n    this.id = '';\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreHabilidad: ['', [Validators.required, Validators.minLength(5)]],\n      porcentaje: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  ngOnInit() {\n    this.apiService.getSoftSkill(this.route.snapshot.paramMap.get('id')).subscribe(softSkill => {\n      this.softSkill = softSkill;\n      this.form.controls['nombreHabilidad'].setValue(softSkill.nombreHabilidad);\n      this.form.controls['porcentaje'].setValue(softSkill.porcentaje);\n    });\n  }\n  get NombreHabilidad() {\n    return this.form.get('nombreHabilidad');\n  }\n  get Norcentaje() {\n    return this.form.get('porcentaje');\n  }\n  onEnviar(event) {\n    event.preventDefault();\n    this.apiService.updateSoftSkill(this.form.value, this.route.snapshot.paramMap.get('id')).subscribe(data => {\n      this.router.navigate(['portfolio']);\n    });\n  }\n}\nSoftSkillsUpdateComponent.ɵfac = function SoftSkillsUpdateComponent_Factory(t) {\n  return new (t || SoftSkillsUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nSoftSkillsUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SoftSkillsUpdateComponent,\n  selectors: [[\"app-soft-skills-update\"]],\n  decls: 2,\n  vars: 0,\n  template: function SoftSkillsUpdateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"soft-skills-update works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;AASnE,OAAM,MAAOC,yBAAyB;EAMpCC,YACUC,WAAuB,EACvBC,UAAsB,EACtBC,MAAc,EACdC,KAAqB;IAHrB,gBAAW,GAAXH,WAAW;IACX,eAAU,GAAVC,UAAU;IACV,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IAPf,OAAE,GAAW,EAAE;IASb,IAAI,CAACC,IAAI,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MACjC;MACAC,eAAe,EAAC,CAAC,EAAE,EAAE,CAACT,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MACpEC,UAAU,EAAC,CAAC,EAAE,EAAE,CAACZ,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,SAAS,CAAC,CAAC,CAAC,CAAC;KAC/D,CAAC;EACJ;EAEAE,QAAQ;IACN,IAAI,CAACT,UAAU,CAACU,YAAY,CAAC,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC,CAACC,SAAS,CAC3EC,SAAc,IAAI;MACjB,IAAI,CAACA,SAAS,GAAGA,SAAS;MAC1B,IAAI,CAACZ,IAAI,CAACa,QAAQ,CAAC,iBAAiB,CAAC,CAACC,QAAQ,CAACF,SAAS,CAACV,eAAe,CAAC;MACzE,IAAI,CAACF,IAAI,CAACa,QAAQ,CAAC,YAAY,CAAC,CAACC,QAAQ,CAACF,SAAS,CAACP,UAAU,CAAC;IACjE,CAAC,CACF;EACH;EAEA,IAAIU,eAAe;IACjB,OAAO,IAAI,CAACf,IAAI,CAACU,GAAG,CAAC,iBAAiB,CAAC;EACzC;EACA,IAAIM,UAAU;IACZ,OAAO,IAAI,CAAChB,IAAI,CAACU,GAAG,CAAC,YAAY,CAAC;EACpC;EAEAO,QAAQ,CAACC,KAAW;IAClBA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAI,CAACtB,UAAU,CAACuB,eAAe,CAAC,IAAI,CAACpB,IAAI,CAACqB,KAAK,EAAE,IAAI,CAACtB,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC,CACrFC,SAAS,CAACW,IAAI,IAAE;MACf,IAAI,CAACxB,MAAM,CAACyB,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC,CAAC;EACN;;AA1CW7B,yBAAyB;mBAAzBA,yBAAyB;AAAA;AAAzBA,yBAAyB;QAAzBA,yBAAyB;EAAA8B;EAAAC;EAAAC;EAAAC;IAAA;MCVtCC,yBAAG;MAAAA,yCAAyB;MAAAA,iBAAI","names":["Validators","SoftSkillsUpdateComponent","constructor","formBuilder","apiService","router","route","form","group","nombreHabilidad","required","minLength","porcentaje","ngOnInit","getSoftSkill","snapshot","paramMap","get","subscribe","softSkill","controls","setValue","NombreHabilidad","Norcentaje","onEnviar","event","preventDefault","updateSoftSkill","value","data","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/soft-skills/soft-skills-update/soft-skills-update.component.ts","/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/soft-skills/soft-skills-update/soft-skills-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../../servicios/api.service';\n\n@Component({\n  selector: 'app-soft-skills-update',\n  templateUrl: './soft-skills-update.component.html',\n  styleUrls: ['./soft-skills-update.component.css']\n})\nexport class SoftSkillsUpdateComponent implements OnInit {\n\n  form:FormGroup;\n  id: string = '';\n  softSkill: any;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ){\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreHabilidad:['', [Validators.required, Validators.minLength(5)]],\n      porcentaje:['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.apiService.getSoftSkill(this.route.snapshot.paramMap.get('id')).subscribe(\n      (softSkill: any) => {\n        this.softSkill = softSkill;\n        this.form.controls['nombreHabilidad'].setValue(softSkill.nombreHabilidad);\n        this.form.controls['porcentaje'].setValue(softSkill.porcentaje);\n      }\n    )\n  }\n  \n  get NombreHabilidad(){\n    return this.form.get('nombreHabilidad');\n  }\n  get Norcentaje(){\n    return this.form.get('porcentaje');\n  }\n  \n  onEnviar(event:Event){\n    event.preventDefault();\n    this.apiService.updateSoftSkill(this.form.value, this.route.snapshot.paramMap.get('id'))\n      .subscribe(data=>{\n        this.router.navigate(['portfolio'])\n      })\n  }\n}\n","<p>soft-skills-update works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}