{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Metodos de Persona\n  getPersonas() {\n    return this.http.get('http://localhost:8080/api/persona/getAll');\n  }\n  getPersona(id) {\n    return this.http.get(`http://localhost:8080/api/persona/${id}`);\n  }\n  createPersona(formData) {\n    return this.http.post('http://localhost:8080/api/persona/create', formData);\n  }\n  updatePersona(formData, id) {\n    return this.http.put(`http://localhost:8080/api/persona/${id}`, formData);\n  }\n  deletePersona(id) {\n    return this.http.delete(`http://localhost:8080/api/persona/${id}`);\n  }\n  //Metodos de Educacion\n  getEducaciones() {\n    return this.http.get('http://localhost:8080/api/educaciones/getAll');\n  }\n  getEducacion(id) {\n    return this.http.get(`http://localhost:8080/api/educaciones/${id}`);\n  }\n  createEducacion(formData) {\n    return this.http.post('http://localhost:8080/api/educaciones/create', formData);\n  }\n  updateEducacion(formData, id) {\n    return this.http.put(`http://localhost:8080/api/educaciones/${id}`, formData);\n  }\n  deleteEducacion(id) {\n    return this.http.delete(`http://localhost:8080/api/educaciones/${id}`);\n  }\n  //Metodos de Experiencia\n  getExperiencias() {\n    return this.http.get('http://localhost:8080/api/experiencias/getAll');\n  }\n  getExperiencia(id) {\n    return this.http.get(`http://localhost:8080/api/experiencias/${id}`);\n  }\n  createExperiencia(formData) {\n    return this.http.post('http://localhost:8080/api/experiencias/create', formData);\n  }\n  updateExperiencia(formData, id) {\n    return this.http.put(`http://localhost:8080/api/experiencias/${id}`, formData);\n  }\n  deleteExperiencia(id) {\n    return this.http.delete(`http://localhost:8080/api/experiencias/${id}`);\n  }\n  //Metodos de Skill\n  getSkills() {\n    return this.http.get('http://localhost:8080/api/skills/getAll');\n  }\n  getSkill(id) {\n    return this.http.get(`http://localhost:8080/api/skills/${id}`);\n  }\n  createSkill(formData) {\n    return this.http.post('http://localhost:8080/api/skills/create', formData);\n  }\n  updateSkill(formData, id) {\n    return this.http.put(`http://localhost:8080/api/skills/${id}`, formData);\n  }\n  deleteSkill(id) {\n    return this.http.delete(`http://localhost:8080/api/skills/${id}`);\n  }\n  //Metodos de Proyecto\n  getProyectos() {\n    return this.http.get('http://localhost:8080/api/proyectos/getAll');\n  }\n  getProyecto(id) {\n    return this.http.get(`http://localhost:8080/api/proyectos/${id}`);\n  }\n  createProyecto(formData) {\n    return this.http.post('http://localhost:8080/api/proyectos/create', formData);\n  }\n  updateProyecto(formData, id) {\n    return this.http.put(`http://localhost:8080/api/proyectos/${id}`, formData);\n  }\n  deleteProyecto(id) {\n    return this.http.delete(`http://localhost:8080/api/proyectos/${id}`);\n  }\n  login(creds) {\n    return this.http.post('http://localhost:8080/login', creds, {\n      observe: 'response'\n    }).pipe(map(response => {\n      const body = response.body;\n      const headers = response.headers;\n      const bearerToken = headers.get('Authorization');\n      const token = bearerToken.replace('Bearer ', '');\n      localStorage.setItem('token', token);\n      return body;\n    }));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}