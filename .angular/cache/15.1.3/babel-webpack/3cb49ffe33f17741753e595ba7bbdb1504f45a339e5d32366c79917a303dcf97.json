{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet ExperienceUpdateComponent = class ExperienceUpdateComponent {\n  constructor(formBuilder, apiService, router, route) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.route = route;\n    this.id = '';\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombrePuesto: ['', [Validators.required, Validators.minLength(5)]],\n      nombreLugar: ['', [Validators.required, Validators.minLength(5)]],\n      descripcion: ['', [Validators.required, Validators.minLength(5)]],\n      fechaInicio: ['', [Validators.required, Validators.minLength(5)]],\n      fechaFinal: ['', [Validators.required, Validators.minLength(5)]],\n      imageExp: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  ngOnInit() {\n    this.apiService.getExperiencia(this.route.snapshot.paramMap.get('id')).subscribe(experiencia => {\n      this.experiencia = experiencia;\n      this.form.controls['nombrePuesto'].setValue(experiencia.nombrePuesto);\n      this.form.controls['nombreLugar'].setValue(experiencia.nombreLugar);\n      this.form.controls['descripcion'].setValue(experiencia.descripcion);\n      this.form.controls['fechaInicio'].setValue(experiencia.fechaInicio);\n      this.form.controls['fechaFinal'].setValue(experiencia.fechaFinal);\n      this.form.controls['imageExp'].setValue(experiencia.imageExp);\n    });\n  }\n  get NombrePuesto() {\n    return this.form.get('nombrePuesto');\n  }\n  get NombreLugar() {\n    return this.form.get('nombreLugar');\n  }\n  get Descripcion() {\n    return this.form.get('descripcion');\n  }\n  get FechaInicio() {\n    return this.form.get('fechaInicio');\n  }\n  get FechaFinal() {\n    return this.form.get('fechaFinal');\n  }\n  get ImageExp() {\n    return this.form.get('imageExp');\n  }\n  onEnviar(event) {\n    event.preventDefault();\n    this.apiService.createExperiencia(this.form.value).subscribe(data => {\n      this.router.navigate(['portfolio']);\n    });\n  }\n};\nExperienceUpdateComponent = __decorate([Component({\n  selector: 'app-experience-update',\n  templateUrl: './experience-update.component.html',\n  styleUrls: ['./experience-update.component.css']\n})], ExperienceUpdateComponent);\nexport { ExperienceUpdateComponent };","map":{"version":3,"mappings":"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","names":["Component","Validators","ExperienceUpdateComponent","constructor","formBuilder","apiService","router","route","form","group","nombrePuesto","required","minLength","nombreLugar","descripcion","fechaInicio","fechaFinal","imageExp","ngOnInit","getExperiencia","snapshot","paramMap","get","subscribe","experiencia","controls","setValue","NombrePuesto","NombreLugar","Descripcion","FechaInicio","FechaFinal","ImageExp","onEnviar","event","preventDefault","createExperiencia","value","data","navigate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/experience/experience-create/experience-create.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../../servicios/api.service';\n\n@Component({\n  selector: 'app-experience-update',\n  templateUrl: './experience-update.component.html',\n  styleUrls: ['./experience-update.component.css']\n})\nexport class ExperienceUpdateComponent implements OnInit {\n\n  form:FormGroup;\n  id: string = '';\n  experiencia: any;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ){\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombrePuesto:['', [Validators.required, Validators.minLength(5)]],\n      nombreLugar:['', [Validators.required, Validators.minLength(5)]],\n      descripcion:['', [Validators.required, Validators.minLength(5)]],\n      fechaInicio:['', [Validators.required, Validators.minLength(5)]],\n      fechaFinal:['', [Validators.required, Validators.minLength(5)]],\n      imageExp:['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.apiService.getExperiencia(this.route.snapshot.paramMap.get('id')).subscribe(\n      (experiencia: any) => {\n        this.experiencia = experiencia;\n        this.form.controls['nombrePuesto'].setValue(experiencia.nombrePuesto);\n        this.form.controls['nombreLugar'].setValue(experiencia.nombreLugar);\n        this.form.controls['descripcion'].setValue(experiencia.descripcion);\n        this.form.controls['fechaInicio'].setValue(experiencia.fechaInicio);\n        this.form.controls['fechaFinal'].setValue(experiencia.fechaFinal);\n        this.form.controls['imageExp'].setValue(experiencia.imageExp);\n      }\n    )\n  }\n  \n  get NombrePuesto(){\n    return this.form.get('nombrePuesto');\n  }\n  get NombreLugar(){\n    return this.form.get('nombreLugar');\n  }\n  get Descripcion(){\n    return this.form.get('descripcion');\n  }\n\n  get FechaInicio(){\n    return this.form.get('fechaInicio');\n  }\n\n  get FechaFinal(){\n    return this.form.get('fechaFinal');\n  }\n  \n  get ImageExp(){\n    return this.form.get('imageExp');\n  }\n\n  onEnviar(event:Event){\n    event.preventDefault();\n    this.apiService.createExperiencia(this.form.value)\n      .subscribe(data=>{\n        this.router.navigate(['portfolio'])\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}