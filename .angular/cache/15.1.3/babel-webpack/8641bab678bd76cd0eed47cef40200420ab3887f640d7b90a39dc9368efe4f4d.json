{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../servicios/api.service\";\nimport * as i3 from \"@angular/router\";\nexport class FirstPartCreateComponent {\n  constructor(formBuilder, apiService, router, route) {\n    this.formBuilder = formBuilder;\n    this.apiService = apiService;\n    this.router = router;\n    this.route = route;\n    this.id = '';\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreYApellido: ['', [Validators.required, Validators.minLength(5)]],\n      mail: ['', [Validators.required, Validators.minLength(5)]],\n      descripcion: ['', [Validators.required, Validators.minLength(5)]],\n      urlGithub: ['', [Validators.required, Validators.minLength(5)]],\n      urlLinkedin: ['', [Validators.required, Validators.minLength(5)]],\n      imageLinkedin: ['', [Validators.required, Validators.minLength(5)]],\n      imageGithub: ['', [Validators.required, Validators.minLength(5)]],\n      imageFotoPerfil: ['', [Validators.required, Validators.minLength(5)]],\n      imageBanner: ['', [Validators.required, Validators.minLength(5)]]\n    });\n  }\n  ngOnInit() {\n    this.apiService.getPersona().subscribe(persona => {\n      this.persona = persona;\n      this.form.controls['nombreYApellido'].setValue(persona.nombreYApellido);\n      this.form.controls['mail'].setValue(persona.mail);\n      this.form.controls['descripcion'].setValue(persona.descripcion);\n      this.form.controls['urlGithub'].setValue(persona.urlGithub);\n      this.form.controls['urlLinkedin'].setValue(persona.urlLinkedin);\n      this.form.controls['imageLinkedin'].setValue(persona.imageLinkedin);\n      this.form.controls['imageGithub'].setValue(persona.imageGithub);\n      this.form.controls['imageFotoPerfil'].setValue(persona.imageFotoPerfil);\n      this.form.controls['imageBanner'].setValue(persona.imageBanner);\n    });\n  }\n  get NombreYApellido() {\n    return this.form.get('nombreYApellido');\n  }\n  get Mail() {\n    return this.form.get('mail');\n  }\n  get UrlGithub() {\n    return this.form.get('urlGithub');\n  }\n  get UrlLinkedin() {\n    return this.form.get('urlLinkedin');\n  }\n  get ImageLinkedin() {\n    return this.form.get('imageLinkedin');\n  }\n  get ImageGithub() {\n    return this.form.get('imageGithub');\n  }\n  get ImageFotoPerfil() {\n    return this.form.get('imageFotoPerfil');\n  }\n  get ImageBanner() {\n    return this.form.get('imageBanner');\n  }\n  get Descripcion() {\n    return this.form.get('descripcion');\n  }\n  onEnviar(event) {\n    event.preventDefault();\n    this.apiService.updatePersona(this.form.value).subscribe(data => {\n      this.router.navigate(['portfolio']);\n    });\n  }\n}\nFirstPartCreateComponent.ɵfac = function FirstPartCreateComponent_Factory(t) {\n  return new (t || FirstPartCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ApiService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n};\nFirstPartCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FirstPartCreateComponent,\n  selectors: [[\"app-first-part-create\"]],\n  decls: 2,\n  vars: 0,\n  template: function FirstPartCreateComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \"first-part-create works!\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","FirstPartCreateComponent","constructor","formBuilder","apiService","router","route","form","group","nombreYApellido","required","minLength","mail","descripcion","urlGithub","urlLinkedin","imageLinkedin","imageGithub","imageFotoPerfil","imageBanner","ngOnInit","getPersona","subscribe","persona","controls","setValue","NombreYApellido","get","Mail","UrlGithub","UrlLinkedin","ImageLinkedin","ImageGithub","ImageFotoPerfil","ImageBanner","Descripcion","onEnviar","event","preventDefault","updatePersona","value","data","navigate","selectors","decls","vars","template","i0"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/first-part/first-part-create/first-part-create.component.ts","/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/components/first-part/first-part-create/first-part-create.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ApiService } from '../../../servicios/api.service';\n\n@Component({\n  selector: 'app-first-part-create',\n  templateUrl: './first-part-create.component.html',\n  styleUrls: ['./first-part-create.component.css']\n})\nexport class FirstPartCreateComponent implements OnInit {\n\n  form:FormGroup;\n  id: string = '';\n  persona: any;\n\n  constructor(\n    private formBuilder:FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private route: ActivatedRoute\n  ){\n    this.form = this.formBuilder.group({\n      //ACA SE PUEDE PONER SI ES MAIL O OTROS VALIDATORS\n      nombreYApellido:['', [Validators.required, Validators.minLength(5)]],\n      mail:['', [Validators.required, Validators.minLength(5)]],\n      descripcion:['', [Validators.required, Validators.minLength(5)]],\n      urlGithub:['', [Validators.required, Validators.minLength(5)]],\n      urlLinkedin:['', [Validators.required, Validators.minLength(5)]],\n      imageLinkedin:['', [Validators.required, Validators.minLength(5)]],\n      imageGithub:['', [Validators.required, Validators.minLength(5)]],\n      imageFotoPerfil:['', [Validators.required, Validators.minLength(5)]],\n      imageBanner:['', [Validators.required, Validators.minLength(5)]],\n    });\n  }\n\n  ngOnInit(): void {\n    this.apiService.getPersona().subscribe(\n      (persona: any) => {\n        this.persona = persona;\n        this.form.controls['nombreYApellido'].setValue(persona.nombreYApellido);\n        this.form.controls['mail'].setValue(persona.mail);\n        this.form.controls['descripcion'].setValue(persona.descripcion);\n        this.form.controls['urlGithub'].setValue(persona.urlGithub);\n        this.form.controls['urlLinkedin'].setValue(persona.urlLinkedin);\n        this.form.controls['imageLinkedin'].setValue(persona.imageLinkedin);\n        this.form.controls['imageGithub'].setValue(persona.imageGithub);\n        this.form.controls['imageFotoPerfil'].setValue(persona.imageFotoPerfil);\n        this.form.controls['imageBanner'].setValue(persona.imageBanner);\n      }\n    )\n  }\n  \n  get NombreYApellido(){\n    return this.form.get('nombreYApellido');\n  }\n  get Mail(){\n    return this.form.get('mail');\n  }\n  get UrlGithub(){\n    return this.form.get('urlGithub');\n  }\n\n  get UrlLinkedin(){\n    return this.form.get('urlLinkedin');\n  }\n\n  get ImageLinkedin(){\n    return this.form.get('imageLinkedin');\n  }\n  \n  get ImageGithub(){\n    return this.form.get('imageGithub');\n  }\n\n  get ImageFotoPerfil(){\n    return this.form.get('imageFotoPerfil');\n  }\n\n  get ImageBanner(){\n    return this.form.get('imageBanner');\n  }\n\n  get Descripcion(){\n    return this.form.get('descripcion');\n  }\n\n  onEnviar(event:Event){\n    event.preventDefault();\n    this.apiService.updatePersona(this.form.value)\n      .subscribe(data=>{\n        this.router.navigate(['portfolio'])\n      })\n  }\n}\n","<p>first-part-create works!</p>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}