{"ast":null,"code":"import { map } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n  //Metodos de Persona\n  getPersonas() {\n    return this.http.get('https://api-service-bd.onrender.com/api/persona/getAll');\n  }\n  getPersona(id) {\n    return this.http.get(`https://api-service-bd.onrender.com/api/persona/${id}`);\n  }\n  createPersona(formData) {\n    return this.http.post('https://api-service-bd.onrender.com/api/persona/create', formData);\n  }\n  updatePersona(formData, id) {\n    return this.http.put(`https://api-service-bd.onrender.com/api/persona/${id}`, formData);\n  }\n  deletePersona(id) {\n    return this.http.delete(`https://api-service-bd.onrender.com/api/persona/${id}`);\n  }\n  //Metodos de Educacion\n  getEducaciones() {\n    return this.http.get('https://api-service-bd.onrender.com/api/educaciones/getAll');\n  }\n  getEducacion(id) {\n    return this.http.get(`https://api-service-bd.onrender.com/api/educaciones/${id}`);\n  }\n  createEducacion(formData) {\n    return this.http.post('https://api-service-bd.onrender.com/api/educaciones/create', formData);\n  }\n  updateEducacion(formData, id) {\n    return this.http.put(`https://api-service-bd.onrender.com/api/educaciones/${id}`, formData);\n  }\n  deleteEducacion(id) {\n    return this.http.delete(`https://api-service-bd.onrender.com/api/educaciones/${id}`);\n  }\n  //Metodos de Experiencia\n  getExperiencias() {\n    return this.http.get('https://api-service-bd.onrender.com/api/experiencias/getAll');\n  }\n  getExperiencia(id) {\n    return this.http.get(`https://api-service-bd.onrender.com/api/experiencias/${id}`);\n  }\n  createExperiencia(formData) {\n    return this.http.post('https://api-service-bd.onrender.com/api/experiencias/create', formData);\n  }\n  updateExperiencia(formData, id) {\n    return this.http.put(`https://api-service-bd.onrender.com/api/experiencias/${id}`, formData);\n  }\n  deleteExperiencia(id) {\n    return this.http.delete(`https://api-service-bd.onrender.com/api/experiencias/${id}`);\n  }\n  //Metodos de Skill\n  getSkills() {\n    return this.http.get('https://api-service-bd.onrender.com/api/skills/getAll');\n  }\n  getSkill(id) {\n    return this.http.get(`https://api-service-bd.onrender.com/api/skills/${id}`);\n  }\n  createSkill(formData) {\n    return this.http.post('https://api-service-bd.onrender.com/api/skills/create', formData);\n  }\n  updateSkill(formData, id) {\n    return this.http.put(`https://api-service-bd.onrender.com/api/skills/${id}`, formData);\n  }\n  deleteSkill(id) {\n    return this.http.delete(`https://api-service-bd.onrender.com/api/skills/${id}`);\n  }\n  //Metodos de Proyecto\n  getProyectos() {\n    return this.http.get('https://api-service-bd.onrender.com/api/proyectos/getAll');\n  }\n  getProyecto(id) {\n    return this.http.get(`https://api-service-bd.onrender.com/api/proyectos/${id}`);\n  }\n  createProyecto(formData) {\n    return this.http.post('https://api-service-bd.onrender.com/api/proyectos/create', formData);\n  }\n  updateProyecto(formData, id) {\n    return this.http.put(`https://api-service-bd.onrender.com/api/proyectos/${id}`, formData);\n  }\n  deleteProyecto(id) {\n    return this.http.delete(`https://api-service-bd.onrender.com/api/proyectos/${id}`);\n  }\n  login(creds) {\n    return this.http.post('https://api-service-bd.onrender.com/login', creds, {\n      observe: 'response'\n    }).pipe(map(response => {\n      const body = response.body;\n      const headers = response.headers;\n      const bearerToken = headers.get('Authorization');\n      const token = bearerToken.replace('Bearer ', '');\n      localStorage.setItem('token', token);\n      return body;\n    }));\n  }\n  getToken() {\n    return localStorage.getItem('token');\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["map","ApiService","constructor","http","getPersonas","get","getPersona","id","createPersona","formData","post","updatePersona","put","deletePersona","delete","getEducaciones","getEducacion","createEducacion","updateEducacion","deleteEducacion","getExperiencias","getExperiencia","createExperiencia","updateExperiencia","deleteExperiencia","getSkills","getSkill","createSkill","updateSkill","deleteSkill","getProyectos","getProyecto","createProyecto","updateProyecto","deleteProyecto","login","creds","observe","pipe","response","body","headers","bearerToken","token","replace","localStorage","setItem","getToken","getItem","factory","providedIn"],"sourceRoot":"","sources":["/home/valdiviaricardo/Documents/YOPROGRAMO/SPRING/front-end-portfolio/src/app/servicios/api.service.ts"],"sourcesContent":["import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, map } from 'rxjs';\nimport { Persona, Educacion, Experiencia, Proyecto, Skill, Credentials} from '../models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http:HttpClient) { }\n\n  //Metodos de Persona\n\n  getPersonas(): Observable<Persona[]>{\n    return this.http.get<Persona[]>('https://api-service-bd.onrender.com/api/persona/getAll')\n  }\n\n  getPersona(id: any): Observable<Persona>{\n    return this.http.get<Persona>(`https://api-service-bd.onrender.com/api/persona/${id}`)\n  }\n\n  createPersona(formData:any): Observable<any>{\n    return this.http.post('https://api-service-bd.onrender.com/api/persona/create', formData);\n  }\n\n  updatePersona(formData:any, id:any): Observable<any>{\n    return this.http.put(`https://api-service-bd.onrender.com/api/persona/${id}`, formData);\n  }\n\n  deletePersona(id:any): Observable<any>{\n    return this.http.delete(`https://api-service-bd.onrender.com/api/persona/${id}`);\n  }\n\n  //Metodos de Educacion\n\n  getEducaciones(): Observable<Educacion[]>{\n    return this.http.get<Educacion[]>('https://api-service-bd.onrender.com/api/educaciones/getAll')\n  }\n\n  getEducacion(id: any): Observable<Educacion>{\n    return this.http.get<Educacion>(`https://api-service-bd.onrender.com/api/educaciones/${id}`)\n  }\n\n  createEducacion(formData:any): Observable<any>{\n    return this.http.post('https://api-service-bd.onrender.com/api/educaciones/create', formData);\n  }\n\n  updateEducacion(formData:any, id:any): Observable<any>{\n    return this.http.put(`https://api-service-bd.onrender.com/api/educaciones/${id}`, formData);\n  }\n\n  deleteEducacion(id:any): Observable<any>{\n    return this.http.delete(`https://api-service-bd.onrender.com/api/educaciones/${id}`);\n  }\n\n  //Metodos de Experiencia\n\n  getExperiencias(): Observable<Experiencia[]>{\n    return this.http.get<Experiencia[]>('https://api-service-bd.onrender.com/api/experiencias/getAll')\n  }\n\n  getExperiencia(id: any): Observable<Experiencia>{\n    return this.http.get<Experiencia>(`https://api-service-bd.onrender.com/api/experiencias/${id}`)\n  }\n\n  createExperiencia(formData:any): Observable<any>{\n    return this.http.post('https://api-service-bd.onrender.com/api/experiencias/create', formData);\n  }\n\n  updateExperiencia(formData:any, id:any): Observable<any>{\n    return this.http.put(`https://api-service-bd.onrender.com/api/experiencias/${id}`, formData);\n  }\n\n  deleteExperiencia(id:any): Observable<any>{\n    return this.http.delete(`https://api-service-bd.onrender.com/api/experiencias/${id}`);\n  }\n\n  //Metodos de Skill\n\n  getSkills(): Observable<Skill[]>{\n    return this.http.get<Skill[]>('https://api-service-bd.onrender.com/api/skills/getAll')\n  }\n\n  getSkill(id: any): Observable<Skill>{\n    return this.http.get<Skill>(`https://api-service-bd.onrender.com/api/skills/${id}`)\n  }\n\n  createSkill(formData:any): Observable<any>{\n    return this.http.post('https://api-service-bd.onrender.com/api/skills/create', formData);\n  }\n\n  updateSkill(formData:any, id:any): Observable<any>{\n    return this.http.put(`https://api-service-bd.onrender.com/api/skills/${id}`, formData);\n  }\n\n  deleteSkill(id:any): Observable<any>{\n    return this.http.delete(`https://api-service-bd.onrender.com/api/skills/${id}`);\n  }\n\n  //Metodos de Proyecto\n\n  getProyectos(): Observable<Proyecto[]>{\n    return this.http.get<Proyecto[]>('https://api-service-bd.onrender.com/api/proyectos/getAll')\n  }\n\n  getProyecto(id: any): Observable<Proyecto>{\n    return this.http.get<Proyecto>(`https://api-service-bd.onrender.com/api/proyectos/${id}`)\n  }\n\n  createProyecto(formData:any): Observable<any>{\n    return this.http.post('https://api-service-bd.onrender.com/api/proyectos/create', formData);\n  }\n\n  updateProyecto(formData:any, id:any): Observable<any>{\n    return this.http.put(`https://api-service-bd.onrender.com/api/proyectos/${id}`, formData);\n  }\n\n  deleteProyecto(id:any): Observable<any>{\n    return this.http.delete(`https://api-service-bd.onrender.com/api/proyectos/${id}`);\n  }\n\n  login(creds: Credentials){\n    return this.http.post('https://api-service-bd.onrender.com/login', creds, {\n      observe: 'response'\n    }).pipe(map((response: HttpResponse<any>) =>{\n      const body = response.body;\n      const headers = response.headers;\n\n      const bearerToken = headers.get('Authorization')!;\n      const token = bearerToken.replace('Bearer ', '');\n\n      localStorage.setItem('token', token);\n\n      return body;\n    }))\n  }\n\n  getToken(){\n    return localStorage.getItem('token');\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}